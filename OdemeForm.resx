<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAGo5JREFUeF7t
        3XmwFVV+B3BNKsuMqUol+SdJVapSM5NUpZJKZsqqJFP5x8h7D98G4rsXcAFFWURQQMAFUXAFUQQR3BcU
        F1RcEEUR941NRnEZkMWNRVBRhKdsYqe/7e9lnpffOff2vaf79vL9VH1LCunTt7vPubeX0+ccQURERERE
        RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
        RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
        RERERERERERERERERERERERERERERERERESUJU1NA47q0VY4r6G18KafTj9ezoJtXtXQUhzf3t7+c9kt
        lDY9+vT5m4bmjt80thZ7NbR2nN7Y0jGisbVwvp+xDa3FoY0txQH+3zf8b3vHvx5zzGl/LovlWs9exV/5
        lX99t8aQ77QV1h3b3O+XsnsoqfCrdWxzobmxpXC137iX+gfv88MOpj3f+9nQ0FZc4P93dFNr8ehisfjH
        UnwuYB/6X4gfdNsnDOJ/CfBMIIHwC+83+MH+L/qz/oE6cNiBqzVthR1+g7ilsb3QNHny5D+S1WaWnPbr
        +4IZJ7uJ6q2h+YT/bmjruM8/KPtLDlKU+dg/s7jomJbi38rHyBx/G3HNr20701JcKbuJ6qWpuXis3whf
        Uw9QfNnXo7Xjrp5tff5DPlZm+NuWxxt+lWaP7CaKW1Nrn3/zG/4LykGpa8ZPuNRbvnK198MPP3hZ0N5x
        irqdTMHrVRjgSXWkuPy2WPyZv/Ov8eP++t5hBg07x1u0eIm3b98+aUrpNHzUeer2MQVvxOgL+AUQp+BX
        v6WwRjsYSU3vvgO9Obfc6X3+xZfSpNLlwQUL1e1iCt7Djy3iF0Bc/NP94f5Oj/MGn9Mc17u/N+XaWd76
        jZukaaXD3r37grMZbZvynEHDRnn79u/nF0DU8Nzd3+FTSw9AmoPT6meff8k7dOiQNLNk27ptO78EugWN
        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
        qGAwj2ouB3DajxGTKRmkmZtpB9EWV7SybckLbdttidKuXd8EE53gTr627u7Br/7U6bN4zZ8w0szNtINp
        iyta2bbkhbbttsQBj/HwSu+ESVcGvfrQbRjBn9HJZ+GTz/BRX0JJMzfTKpUtrmhl25IX2rbbQmQjzdxM
        q1S2uKKVbUteaNtuC5GNNHMzrVLZ4opWti15gddHte03xeXgEZQ90szNtEpliyta2bbkRdihp7Zs3SZL
        Eh1OmrmZVqlscUUr25a8OPn04er2m7Lm3fdlSaLDSTM30yqVLa5oZduSF5VMS949981/RJYkOpw0czOt
        Utniila2LXkxc/at6vabMnKMu3EBKXukmZtplcoWV7SybcmLRYuXqNtvCjrgYCILIo00czOtUtniila2
        LXnx6eYt6vbbgskiiTTSzM20CmWLK1rZtuRJ/4FD1X1gCs4CohpWmtJNmrmZVqFscUUr25Y8ufHWu9R9
        YAvG3scsNkTdSTM30yqTLa5oZduSJ+s3blL3Qbmgr/6hQ4ekFCJ+AaQW7u5r+6Fc8CXgYk45ygZp5mZa
        JbLFFa1sW/Lm9WUr1f1QSfCWHu8JEEgzN9MqkC2uaGXbkjeYEjrMPIGlwY1BTEPFR4T5Js3cTKs8trii
        lW1LHq1dtz5oyNr+qDRYHpOIosfg2++8FzxmxBTklA/SzM20SsNUH0zuiUkgH1yw0Mn8/dfPCdczkMln
        TPVOmrmZVhjjJng0t3Vbbafg+/bvD+aN18pnGC3d6500czOtAMZdcDBqPRP45NMtXu++A9XyGUZLV72T
        Zm6mLcy4zUOPLJSmXD289tvS50S1fIbRgnonzdxMW5BxG9yEcwFDdfNLgKk0qHfSzM20BRm3wQi6ruBM
        gJcDTCVBvZNmbub/wz2lCzLOs1t2txMNrf3+xS/znZJ1MExpytc7/x+9WbIQ4zotxZWyu535bbH4M7/s
        OX4O/WRdDNOVSuqd/4/GqwszztKjrXiu7G7njm0r/qe/jlWl62SYiupdU9OAoxraCuu0AhgnWYtfa9nd
        UTmyqa2j3V/X8pJ1M/lN5fXu2OZ+v+SXQCRZ29Da8QvZzbFobCn+2l/vdY2thc0ln4XJT8LXu/b29p/7
        lWasnxV+AZ0lBTKVpxP7EKdfMfzyW/Vo6ffPDa3FoX5luNH/XM/52eBnp5/9frTPzqQ3ial3RERERERE
        RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
        RERERETJdcQR/wfbNN2dHtVRRQAAAABJRU5ErkJggg==
</value>
  </data>
</root>